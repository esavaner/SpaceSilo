// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String?
  role      String   @default("user")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  photos    Photo[]
  albums    Album[]
  files     File[]
  folders   Folder[]
  sharedByUser    Space[]
  sharedToUser SpaceUser[]
}


model Photo {
  id        String   @id @default(cuid())
  url       String
  path      String
  thumbnailPath String
  hash      String
  metadata  Json?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  ownerId   String
  owner     User     @relation(fields: [ownerId], references: [id])
  albums    Album[]
  space     Space[]
}

model Album {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  ownerId   String
  owner     User     @relation(fields: [ownerId], references: [id])
  parentId  String?
  parent    Album?   @relation("Subalbums", fields: [parentId], references: [id])
  subalbums Album[]  @relation("Subalbums")
  photos    Photo[]
  space     Space[]
}

model File {
  id        String   @id @default(cuid())
  name      String
  path      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  ownerId   String
  owner     User     @relation(fields: [ownerId], references: [id])
  folderId  String?
  folder    Folder?  @relation(fields: [folderId], references: [id])
  space     Space[]
}

model Folder {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  ownerId   String
  owner     User     @relation(fields: [ownerId], references: [id])
  parentId  String?
  parent    Folder?  @relation("Subfolders", fields: [parentId], references: [id])
  subfolders Folder[] @relation("Subfolders")
  files     File[]
  space     Space[]
}

model Space {
  id        String   @id @default(cuid())
  spaceId   String 
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  ownerId   String
  owner     User     @relation(fields: [ownerId], references: [id])
  sharedTo  SpaceUser[]
  albums    Album[]
  photos    Photo[]
  files     File[]
  folders   Folder[]
}

model SpaceUser {
  spaceId   String
  space     Space    @relation(fields: [spaceId], references: [id])
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  admin     Boolean  @default(false)
  write     Boolean  @default(false)
  delete    Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@id([spaceId, userId])
}